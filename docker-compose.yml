version: '3.8'
services:
    postgres:
        container_name: postgres_db
        image: postgres:latest
        ports:
            - 5000:5432
        environment:
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=library_db
        networks: 
            - library_back
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    library_back:
        build:
            context: library_back/
            dockerfile: Dockerfile.back
        container_name: library_back
        environment:
            - DJANGO_SETTINGS_MODULE=src.settings
            - POSTGRES_DB=library_db
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=password
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
        ports:
            - 8000:8000
        depends_on:
            postgres:
                condition: service_healthy
        volumes:
            - back:/back/
        networks: 
            - library_back

    library_front:
        build:
            context: library_front/
            dockerfile: Dockerfile.front
        container_name: library_front
        stdin_open: true
        environment:
            - CHOKIDAR_USEPOLLING=true
        volumes:
            - gces-monitoria:/app/
            - node_modules:/gces-monitoria/node_modules
        networks: 
            - library_back
        depends_on:
            - postgres
            - library_back

    nginx:
        build:
            context: nginx/
            dockerfile: Dockerfile.proxy
        container_name: nginx
        ports:
            - 3050:80
        depends_on:
            - library_back
            - library_front
        networks:
            - library_back

networks:
    library_back:
volumes: 
    node_modules:
    gces-monitoria:
    back:
